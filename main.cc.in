#cmakedefine BUILD_API
#ifdef BUILD_API
#include "HttpServer/Server.hpp"
#include "API/ArithmeticExpresionEvaluatorApi.hpp"
#endif 

#include <iostream>
#include <memory>
#include "ExpressionTree/Parser.hpp"


int main(int argc, char** argv)
{

    std::shared_ptr<arithmetic_expression_evaluator::Parser> parser = std::make_shared<arithmetic_expression_evaluator::Parser>();
    arithmetic_expression_evaluator::ExpressionNode root ;
    
    #if defined(BUILD_API) && @BUILD_API@
        int httpPort = 4444;
        std::shared_ptr<ArithmeticExpressionEvaluator> arithmeticExpressionEvaluator = std::make_shared<ArithmeticExpressionEvaluator>(parser,root);
        
        if( argc == 2){
            std::cout << " http server is running : port( "<< argv[1] <<")\n";
            httpPort= atoi(argv[1]);
        } else{
            std::cout << " http server is running : port( "<< "4444" <<")\n";
        } 

        std::shared_ptr<Server> httpServer = std::make_shared<Server>(httpPort);           
        httpServer->addHttpController(arithmeticExpressionEvaluator);
        httpServer->start();
    
    #else
        std::cout << " put in you Arithmetic Expression"  << '\n';
        std::string expression;
        getline(std::cin, expression);

        parser->checkFormat(expression);
        parser->parse(root,expression);

        int result;
        root.calculate(result);
        std::cout << " result = " << (result) << '\n';
    #endif

   





    return 0;
}
